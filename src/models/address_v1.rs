/*
 * SBanken API
 *
 * API for accessing bank information in SBanken
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */


use serde::{Deserialize, Serialize};



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct AddressV1 {
    #[serde(rename = "addressLine1", skip_serializing_if = "Option::is_none")]
    pub address_line1: Option<String>,
    #[serde(rename = "addressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    #[serde(rename = "addressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    #[serde(rename = "addressLine4", skip_serializing_if = "Option::is_none")]
    pub address_line4: Option<String>,
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "zipCode", skip_serializing_if = "Option::is_none")]
    pub zip_code: Option<String>,
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
}

impl AddressV1 {
    pub fn new() -> AddressV1 {
        AddressV1 {
            address_line1: None,
            address_line2: None,
            address_line3: None,
            address_line4: None,
            country: None,
            zip_code: None,
            city: None,
        }
    }
}


